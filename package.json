{
  "private": true,
  "name": "phenomic",
  "repository": "https://github.com/phenomic/phenomic.git",
  "homepage": "https://phenomic.io",
  "license": "MIT",
  "authors": [
    "Maxime Thirouin (MoOx)",
    "bloodyowl <bloodyowl@icloud.com>"
  ],
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-eslint": "^7.2.3",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-env": "^1.4.0",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-1": "^6.24.1",
    "chalk": "^1.1.3",
    "cross-env": "^2.0.0",
    "eslint": "^3.7.1",
    "eslint-config-i-am-meticulous": "^6.0.1",
    "eslint-import-resolver-webpack": "^0.8.1",
    "eslint-plugin-flowtype": "^2.31.0",
    "eslint-plugin-import": "^2.3.0",
    "eslint-plugin-react": "^6.10.3",
    "eslint-plugin-react-native": "^2.3.2",
    "flow-bin": "^0.47.0",
    "git-exec-and-restage": "^1.0.1",
    "globby": "^6.1.0",
    "husky": "^0.13.3",
    "jest": "^20.0.0",
    "lerna": "^2.0.0",
    "lint-staged": "^3.4.0",
    "npm-run-all": "^3.0.0",
    "prettier": "^1.3.1",
    "prettier-markdown": "^0.1.8",
    "rimraf": "^2.4.2"
  },
  "scripts": {
    "#<git hooks>": "handled by husky",
    "precommit": "lint-staged",
    "#</git hooks>": "handled by husky",
    "clean": "lerna exec -- rimraf lib",
    "transpile": "lerna exec -- babel src --optional runtime --out-dir lib --ignore \"__tests__\"",
    "posttranspile": "lerna run prepare",
    "watch": "lerna exec --parallel -- babel -w src --optional runtime --out-dir lib --ignore \"__tests__\"",
    "bootstrap": "babel-node ./scripts/lerna bootstrap",
    "prepare": "npm run -s clean && npm run -s bootstrap && npm run -s transpile",
    "prerelease": "npm run prepare",
    "release": "lerna publish",
    "format": "npm run -s format:js && npm run -s format:re",
    "format:js": "find . -name \"*.js\" | grep -v \"node_modules\\|lib\\|dist\\|coverage\" | xargs prettier --write --parser=flow",
    "postformat:js": "find . -name \"*.md\" | grep -v \"node_modules\\|lib\\|dist\\|coverage\" | xargs prettier-markdown",
    "format:re": "find . -name \"*.re\" | grep -v \"node_modules\" | xargs refmt --in-place",
    "link": "lerna exec -- npm link",
    "lint:eslint": "eslint --ignore-path .gitignore --fix packages e2e-tests examples docs",
    "lint:flow": "flow check",
    "lint": "npm-run-all --parallel lint:*",
    "tests": "jest --runInBand --coverage packages",
    "examples": "babel-node scripts/examples.js",
    "docs:start": "cd docs && npm start",
    "docs:test": "cd docs && npm test && jest docs",
    "docs:deploy": "cd docs && npm run deploy",
    "pretest": "npm run -s transpile && npm run -s lint",
    "test": "npm run -s tests",
    "posttest": "npm run -s examples && npm run -s docs:test"
  },
  "lint-staged": {
    "*.js": [
      "git-exec-and-restage prettier --write --parser=flow"
    ],
    "*.md": [
      "git-exec-and-restage prettier-markdown"
    ],
    "*.re": [
      "git-exec-and-restage refmt --in-place"
    ]
  },
  "babel": {
    "presets": [
      "babel-preset-env",
      "babel-preset-stage-1",
      "babel-preset-react"
    ],
    "plugins": [
      "babel-plugin-transform-runtime"
    ]
  },
  "eslintConfig": {
    "extends": [
      "eslint-config-i-am-meticulous/react-flow",
      "eslint-config-i-am-meticulous/react-native"
    ],
    "env": {
      "jest": true
    },
    "rules": {
      "import/max-dependencies": [
        2,
        {
          "max": 20
        }
      ]
    },
    "settings": {
      "import/resolver": {
        "webpack": {
          "config": {
            "resolve": {
              "extensions": [
                ".web.js",
                ".js",
                ".json"
              ]
            }
          }
        }
      }
    }
  },
  "jest": {
    "testURL": "test://url.tld/path",
    "notify": true,
    "coverageThreshold": {
      "global": {
        "statements": 65,
        "branches": 65,
        "functions": 65,
        "lines": 65
      }
    },
    "transformIgnorePatterns": [
      "node_modules"
    ],
    "testPathIgnorePatterns": [
      "/_output/"
    ]
  }
}
